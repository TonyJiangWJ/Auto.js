存放路径                       下载地址
ncnn:
/sdcard/脚本/yolov8n.param
/sdcard/脚本/yolov8n.bin
/sdcard/脚本/best.param
/sdcard/脚本/best.bin
onnx:
/sdcard/脚本/manor_lite.onnx

导出onnx模型后通过在线模型转换成ncnn模型
https://convertmodel.com/

yolov8训练后导出onnx需要调整

## 需要修改ultralytics代码 ultralytics==8.2.27 其他版本参考修改
###
#  #ultralytics/nn/modules/block.py
#  class C2f(nn.Module):
#     # ...
#     def forward(self, x):
#         """Forward pass through C2f layer."""
#         # CHANGED
#         # y = list(self.cv1(x).chunk(2, 1))
#         # y.extend(m(y[-1]) for m in self.m)
#         # return self.cv2(torch.cat(y, 1))
#         # CHANGED
#         print("ook")
#         x = self.cv1(x)
#         x = [x, x[:, self.c:, ...]]
#         x.extend(m(x[-1]) for m in self.m)
#         x.pop(1)
#         return self.cv2(torch.cat(x, 1))
#
#  #ultralytics/nn/modules/head.py
#  class Detect(nn.Module):
#     def forward(self, x):
#         """Concatenates and returns predicted bounding boxes and class probabilities."""
#         for i in range(self.nl):
#             x[i] = torch.cat((self.cv2[i](x[i]), self.cv3[i](x[i])), 1)
#         if self.training:  # Training path
#             return x
#
#         # Inference path
#         shape = x[0].shape  # BCHW
#
#         # 转成ncnn格式时，请使用以下两行
# ##      #CHANGED
#         pred = torch.cat([xi.view(shape[0], self.no, -1) for xi in x], 2).permute(0, 2, 1)
#         return pred
# ##      #CHANGED
##

export_onnx.py

```python
    model_path = 'best.pt'
    model = YOLO(model_path)
    model.export(task="detect", format="onnx", opset=12, imgsz=480, simplify=True)
```