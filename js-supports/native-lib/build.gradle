plugins {
    id 'com.android.library'
}

android {
    ndkVersion '21.1.6352462'
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        ndk {
            abiFilters   "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

task makeNativeJar(type: Copy) {
    dependsOn build
    // 删除存在的
    delete 'build/libs/natives.jar'
    // 设置拷贝的文件
    from('build/intermediates/aar_main_jar/release/')
    // 打进jar包后的文件目录
    into('build/libs/')
    // 将classes.jar放入build/libs/目录下
    // include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    // 重命名
    rename ('classes.jar', 'natives.jar')
}

task dexJar(type: Exec) {
    def dxFile = file('../dex_support/dx')
    if (!dxFile.exists()) {
        println 'dx文件不存在，无法执行 请在dex_support下创建软连接文件'
        return
    }
    dependsOn(makeNativeJar)
    workingDir './'
    def commands = []
    commands << '../dex_support/dx'
    commands << '--dex'
    commands << '--output'
    commands << 'build/libs/natives.dex'
    commands << 'build/libs/natives.jar'
    commandLine = commands
}

task makeNativeJni(type: Copy) {
    dependsOn(makeNativeJar)
    // 删除存在的
    delete 'build/libs/jni'
    // 设置拷贝的文件
    from('build/intermediates/merged_native_libs/release/out/lib')
    // 打进jar包后的文件目录
    into('build/libs/jni/')
}

dependencies {

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}