apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compile
    buildToolsVersion versions.buildTool

    defaultConfig {
        minSdkVersion versions.mini
        targetSdkVersion versions.target

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    lint {
        abortOnError false
    }
}

repositories {
    google()
}

dependencies {
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation "junit:junit:$junit_version"
//    api fileTree(include: ['*.jar'], dir: 'libs')
    api fileTree('libs/dx.jar')
    api 'org.greenrobot:eventbus:3.3.1'
    api 'net.lingala.zip4j:zip4j:1.3.3'
    api('com.afollestad.material-dialogs:core:0.9.2.3', {
        exclude group: 'com.android.support'
    })
    api "com.google.android.material:material:$material_version"
    api 'com.makeramen:roundedimageview:2.3.0'
    // OpenCv
    api project(path: ':autojs-aar:opencv')
    // OkHttp
    api 'com.squareup.okhttp3:okhttp:3.14.9'
    // JDeferred
    api 'org.jdeferred:jdeferred-android-aar:1.2.6'
    //RootShell
    api 'com.github.Stericson:RootShell:1.6'
    // Gson
    api 'com.google.code.gson:gson:2.10.1'
    // log4j
    api 'de.mindpipe.android:android-logging-log4j:1.0.3'
    api 'log4j:log4j:1.2.17'

    def shizuku_version = '13.1.4'
    implementation "dev.rikka.shizuku:api:$shizuku_version"
    implementation "dev.rikka.shizuku:provider:$shizuku_version"

    // Terminal emulator
    api project(path: ':autojs-aar:libtermexec')
    api project(path: ':autojs-aar:emulatorview')
    api project(path: ':autojs-aar:term')
    api project(path: ':autojs-aar:rhino-jdk7')
    api project(path: ':autojs-aar:paddleocr')
    api project(path: ':common')
    api project(path: ':automator')
    implementation 'com.rmtheis:tess-two:9.1.0'
    implementation 'com.google.mlkit:text-recognition-chinese:16.0.0'
    implementation 'com.microsoft.onnxruntime:onnxruntime-android:1.15.1'
}

